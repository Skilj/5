2023-11-22 17:28:58 [info     ] ====================================================================================================
2023-11-22 17:28:58 [info     ] Start test should_create_order()
2023-11-22 17:28:58 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:28:58 [info     ] Create random store:           random_store={'id': 46, 'petId': 4, 'quantity': 6, 'shipDate': '2023-11-22T14:28:58', 'status': 'placed', 'complete': True}
2023-11-22 17:28:58 [info     ] - Step 1: Create order:        store={'id': 46, 'petId': 4, 'quantity': 6, 'shipDate': '2023-11-22T14:28:58', 'status': 'placed', 'complete': True}
2023-11-22 17:28:59 [info     ] Send POST request:             request_url=https://petstore.swagger.io/v2/store/order
2023-11-22 17:28:59 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'}
2023-11-22 17:28:59 [info     ] With body:                     body={'id': 46, 'petId': 4, 'quantity': 6, 'shipDate': '2023-11-22T14:28:58', 'status': 'placed', 'complete': True}
2023-11-22 17:28:59 [info     ] Response status code:          status_code=200
2023-11-22 17:28:59 [info     ] Response body:                 response_body={'id': 46, 'petId': 4, 'quantity': 6, 'shipDate': '2023-11-22T14:28:58.000+0000', 'status': 'placed', 'complete': True}
2023-11-22 17:28:59 [error    ] - Bug (wrong milliseconds):    e=AssertionError("Expected <{.., 'shipDate': '2023-11-22T14:28:58.000+0000'}> to be equal to <{.., 'shipDate': '2023-11-22T14:28:58'}>, but was not.")
2023-11-22 17:28:59 [info     ] ====================================================================================================
2023-11-22 17:28:59 [info     ] Start test should_get_error_when_not_found_order()
2023-11-22 17:28:59 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:28:59 [info     ] - Check error when pet ID > 10: pet_id=11
2023-11-22 17:29:00 [info     ] Send GET request:              request_url=https://petstore.swagger.io/v2/store/order/11
2023-11-22 17:29:00 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
2023-11-22 17:29:00 [info     ] With body:                     body=None
2023-11-22 17:29:00 [info     ] Response status code:          status_code=404
2023-11-22 17:29:00 [info     ] Response body:                 response_body={'code': 1, 'type': 'error', 'message': 'Order not found'}
2023-11-22 17:29:00 [info     ] ====================================================================================================
2023-11-22 17:29:00 [info     ] Start test should_get_order()
2023-11-22 17:29:00 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:29:00 [info     ] Create random store:           random_store={'id': 47, 'petId': 6, 'quantity': 5, 'shipDate': '2023-11-22T14:29:00', 'status': 'placed', 'complete': False}
2023-11-22 17:29:00 [info     ] - Step 1: Create order:        store={'id': 47, 'petId': 6, 'quantity': 5, 'shipDate': '2023-11-22T14:29:00', 'status': 'placed', 'complete': False}
2023-11-22 17:29:00 [info     ] Send POST request:             request_url=https://petstore.swagger.io/v2/store/order
2023-11-22 17:29:00 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'}
2023-11-22 17:29:00 [info     ] With body:                     body={'id': 47, 'petId': 6, 'quantity': 5, 'shipDate': '2023-11-22T14:29:00', 'status': 'placed', 'complete': False}
2023-11-22 17:29:00 [info     ] Response status code:          status_code=200
2023-11-22 17:29:00 [info     ] Response body:                 response_body={'id': 47, 'petId': 6, 'quantity': 5, 'shipDate': '2023-11-22T14:29:00.000+0000', 'status': 'placed', 'complete': False}
2023-11-22 17:29:00 [info     ] - Check can get order:         order_id=47
2023-11-22 17:29:01 [info     ] Send GET request:              request_url=https://petstore.swagger.io/v2/store/order/47
2023-11-22 17:29:01 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
2023-11-22 17:29:01 [info     ] With body:                     body=None
2023-11-22 17:29:01 [info     ] Response status code:          status_code=200
2023-11-22 17:29:01 [info     ] Response body:                 response_body={'id': 47, 'petId': 6, 'quantity': 5, 'shipDate': '2023-11-22T14:29:00.000+0000', 'status': 'placed', 'complete': False}
2023-11-22 17:29:01 [info     ] ====================================================================================================
2023-11-22 17:29:01 [info     ] Start test should_delete_order()
2023-11-22 17:29:01 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:29:01 [info     ] Create random store:           random_store={'id': 53, 'petId': 4, 'quantity': 1, 'shipDate': '2023-11-22T14:29:01', 'status': 'placed', 'complete': False}
2023-11-22 17:29:01 [info     ] - Step 1: Create order:        store={'id': 53, 'petId': 4, 'quantity': 1, 'shipDate': '2023-11-22T14:29:01', 'status': 'placed', 'complete': False}
2023-11-22 17:29:01 [info     ] Send POST request:             request_url=https://petstore.swagger.io/v2/store/order
2023-11-22 17:29:01 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'}
2023-11-22 17:29:01 [info     ] With body:                     body={'id': 53, 'petId': 4, 'quantity': 1, 'shipDate': '2023-11-22T14:29:01', 'status': 'placed', 'complete': False}
2023-11-22 17:29:01 [info     ] Response status code:          status_code=200
2023-11-22 17:29:01 [info     ] Response body:                 response_body={'id': 53, 'petId': 4, 'quantity': 1, 'shipDate': '2023-11-22T14:29:01.000+0000', 'status': 'placed', 'complete': False}
2023-11-22 17:29:01 [info     ] - Step 2: Delete order:        store={'id': 53, 'petId': 4, 'quantity': 1, 'shipDate': '2023-11-22T14:29:01', 'status': 'placed', 'complete': False}
2023-11-22 17:29:02 [info     ] Send DELETE request:           request_url=https://petstore.swagger.io/v2/store/order/53
2023-11-22 17:29:02 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'}
2023-11-22 17:29:02 [info     ] With body:                     body=None
2023-11-22 17:29:02 [info     ] Response status code:          status_code=200
2023-11-22 17:29:02 [info     ] Response body:                 response_body={'code': 200, 'type': 'unknown', 'message': '53'}
2023-11-22 17:29:02 [info     ] ====================================================================================================
2023-11-22 17:29:02 [info     ] Start test should_create_user()
2023-11-22 17:29:02 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:29:02 [info     ] Create random user from csv file: user={"username": "MMayers", "email": "fromhellwithlove@gmail.com", "password": "311021"}
2023-11-22 17:29:02 [info     ] - Step 1: Create user:         user={"username": "MMayers", "email": "fromhellwithlove@gmail.com", "password": "311021"}
2023-11-22 17:29:02 [info     ] Send POST request:             request_url=https://petstore.swagger.io/v2/user
2023-11-22 17:29:02 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '84'}
2023-11-22 17:29:02 [info     ] With body:                     body={"username": "MMayers", "email": "fromhellwithlove@gmail.com", "password": "311021"}
2023-11-22 17:29:02 [info     ] Response status code:          status_code=200
2023-11-22 17:29:02 [info     ] Response body:                 response_body={'code': 200, 'type': 'unknown', 'message': '9223372036854768740'}
2023-11-22 17:29:02 [info     ] - Step 2: Check that can get created user:  username=MMayers
2023-11-22 17:29:03 [info     ] Send GET request:              request_url=https://petstore.swagger.io/v2/user/MMayers
2023-11-22 17:29:03 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
2023-11-22 17:29:03 [info     ] With body:                     body=None
2023-11-22 17:29:03 [info     ] Response status code:          status_code=200
2023-11-22 17:29:03 [info     ] Response body:                 response_body={'id': 9223372036854768740, 'username': 'MMayers', 'email': 'fromhellwithlove@gmail.com', 'password': '311021', 'userStatus': 0}
2023-11-22 17:29:03 [info     ] ====================================================================================================
2023-11-22 17:29:03 [info     ] Start test should_get_error_when_not_found_user()
2023-11-22 17:29:03 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:29:03 [info     ] - Check that cannot get non exist user: username=Jason
2023-11-22 17:29:04 [info     ] Send GET request:              request_url=https://petstore.swagger.io/v2/user/Jason
2023-11-22 17:29:04 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
2023-11-22 17:29:04 [info     ] With body:                     body=None
2023-11-22 17:29:04 [info     ] Response status code:          status_code=404
2023-11-22 17:29:04 [info     ] Response body:                 response_body={'code': 1, 'type': 'error', 'message': 'User not found'}
2023-11-22 17:29:04 [info     ] ====================================================================================================
2023-11-22 17:29:04 [info     ] Start test should_update_user()
2023-11-22 17:29:04 [info     ] ----------------------------------------------------------------------------------------------------
2023-11-22 17:29:04 [info     ] Create random user from csv file: user={"username": "Alisa", "email": "alisa.april.one@gmail.ru", "password": "qwerty"}
2023-11-22 17:29:04 [info     ] - Step 1: Create user:         user={"username": "Alisa", "email": "alisa.april.one@gmail.ru", "password": "qwerty"}
2023-11-22 17:29:04 [info     ] Send POST request:             request_url=https://petstore.swagger.io/v2/user
2023-11-22 17:29:04 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'}
2023-11-22 17:29:04 [info     ] With body:                     body={"username": "Alisa", "email": "alisa.april.one@gmail.ru", "password": "qwerty"}
2023-11-22 17:29:04 [info     ] Response status code:          status_code=200
2023-11-22 17:29:04 [info     ] Response body:                 response_body={'code': 200, 'type': 'unknown', 'message': '9223372036854768742'}
2023-11-22 17:29:04 [info     ] - Step 2: Update user:         new_user={"username": "Ilon", "email": "blockhain@cc.com", "password": "password"}
2023-11-22 17:29:05 [info     ] Send PUT request:              request_url=https://petstore.swagger.io/v2/user/Alisa
2023-11-22 17:29:05 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'}
2023-11-22 17:29:05 [info     ] With body:                     body={"username": "Ilon", "email": "blockhain@cc.com", "password": "password"}
2023-11-22 17:29:05 [info     ] Response status code:          status_code=200
2023-11-22 17:29:05 [info     ] Response body:                 response_body={'code': 200, 'type': 'unknown', 'message': '9223372036854768743'}
2023-11-22 17:29:05 [info     ] - Step 3: Check that user updated:  expected_user={'username': 'Ilon', 'email': 'blockhain@cc.com', 'password': 'password'}
2023-11-22 17:29:05 [info     ] Send GET request:              request_url=https://petstore.swagger.io/v2/user/Ilon
2023-11-22 17:29:05 [info     ] Request headers:               request_headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
2023-11-22 17:29:05 [info     ] With body:                     body=None
2023-11-22 17:29:05 [info     ] Response status code:          status_code=200
2023-11-22 17:29:05 [info     ] Response body:                 response_body={'id': 9223372036854768743, 'username': 'Ilon', 'email': 'blockhain@cc.com', 'password': 'password', 'userStatus': 0}
